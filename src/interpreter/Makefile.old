# Used for project1 by Scott Lorberbaum
#
# This makefile includes an entry "depend" which will automatically
# generate complete include file dependencies (including nested
# includes.  To update dependencies, simply update the SRCS variable
# (and OBJS) and type "make depend"
#
TARGETDIR = .
#
# Use gcc for Motif compilations.
#CC = /usr/local/bin/gcc-8
CC = /usr/bin/gcc
LD = /usr/bin/ld
#CC= x86_64-apple-darwin17.7.0-gcc-8
#BISON = /usr/local/opt/bison/bin/bison
BISON = /usr/bin/bison
#FLEX = /usr/local/opt/flex/bin/flex
FLEX = /usr/bin/flex



MYCG = "./interpreter"

LD_FLAGS = -arch x86_64 -macosx_version_min 10.13


#CFLAGS = -g  -O0 -ggdb -I/usr/local/opt/bison/include
CFLAGS = -mmacosx-version-min=10.13 -g  -O0 -ggdb -D DEBUGON

#CFLAGS = -g -O0 -D DEBUGON
#CFLAGS = -g -O0 -D DEBUGOFF

IFLAGS = -I/usr/local/opt/bison/include

#LDFLAGS =  -L/usr/local/opt/bison/lib -lc -L/usr/local/opt/flex/lib
#LDFLAGS =  -g -L/usr/local/opt/bison/lib -lc 
LEX_HEADER_FILE = lex.yy.h
FLOP = -v -p -p -b -B --header-file=$(LEX_HEADER_FILE)
BISOP = -vtd
#LIBS = -lfl -lm
#LIBS = -ll -lm
LIBS = -L./ -lreglib -ldebuglib -lmemlib -ltrans -lcommand -llist -linterpreter -lvmlib


#all: interpreter memlib reglib as_sample listc_driver debuglib transint_driver commandint_driver lex_driver yacc_driver
all: interpreter listc_driver debuglib transint_driver commandint_driver lex_driver yacc_driver vm_driver memlib reglib



as_sample: as_sample.asm as_sample.s a.out
	ld a.out $(LD_FLAGS) -e _main -lsystem
a.out: as_sample.s
	rm a.out || as -g as_sample.s

libs: libmemlib.dylib libdebuglib.dylib libreglib.dylib liblist.dylib libtrans.dylib libcommand.dylib libinterpreter.dylib libvmlib.dylib

LIB_CFLAGS = -dynamic -shared -fpic

#LIBMEM_CFLAGS = -D MEMDEBUG
LIBMEM_LIBS = -L./ -ldebuglib
libmemlib.dylib: memlib.c memlib.h libdebuglib.dylib
	$(CC) $(CFLAGS) $(LIB_CFLAGS) $(LIBMEM_CFLAGS) $(LIBMEM_LIBS) memlib.c -o libmemlib.dylib

#LIBDEB_CFLAGS = -D DEBUG
libdebuglib.dylib: debuglib.c debuglib.h
	$(CC) $(CFLAGS) $(LIBDEB_CFLAGS) $(LIB_CFLAGS) debuglib.c -o libdebuglib.dylib

#LIBREG_CFLAGS = -D REGDEBUG
LIBREG_LIBS = -L./ -lmemlib -ldebuglib
libreglib.dylib: reglib.c reglib.h libmemlib.dylib libdebuglib.dylib
	$(CC) $(CFLAGS) $(LIB_CFLAGS) $(LIBREG_CFLAGS) $(LIBREG_LIBS) reglib.c -o libreglib.dylib
#LIST_CFLAGS = -D LISTDEBUG
LIST_LIBS = -L./ -lmemlib -ldebuglib
liblist.dylib: Listint.c Listint.h libmemlib.dylib libdebuglib.dylib
	$(CC) $(CFLAGS) $(LIST_CFLAGS) $(LIB_CFLAGS) $(LIST_LIBS) Listint.c -o liblist.dylib

#TRANS_CFLAGS = -D TRANSDEBUG
TRANS_LIBS = -L./ -lmemlib -ldebuglib
libtrans.dylib: transint.c transint.h libdebuglib.dylib libmemlib.dylib
	$(CC) $(CFLAGS) $(LIB_CFLAGS) $(TRANS_CFLAGS) $(TRANS_LIBS) transint.c -o libtrans.dylib

#INT_CFLAGS = -D LEXERDEBUG -DPARSERDEBUG
INT_LIBS = -L./ -ldebuglib -lmemlib -llist -ltrans
OUTFILE = -o libinterpreter.dylib
libinterpreter.dylib: interpreter.tab.c interpreter.tab.h lex.yy.c liblist.dylib libtrans.dylib libdebuglib.dylib libmemlib.dylib
	$(CC) $(CFLAGS) $(INT_CFLAGS) $(LIB_CFLAGS) $(INT_LIBS) interpreter.tab.c lex.yy.c $(OUTFILE)

#CMD_CFLAGS = -D COMMANDDEBUG
CMD_LIB = -L./ -ldebuglib -lmemlib -ltrans
libcommand.dylib: commandint.c commandint.h libmemlib.dylib libdebuglib.dylib libtrans.dylib
	$(CC) $(CFLAGS) $(CMD_CFLAGS) $(LIB_CFLAGS) $(CMD_LIB) commandint.c -o libcommand.dylib 

#VMLIB_CFLAGS = -D VMDEBUG
VMLIB_LIB = -L./ -ldebuglib -lmemlib
libvmlib.dylib: vm.c vm.h libmemlib.dylib libdebuglib.dylib
	$(CC) $(CFLAGS) $(VMLIB_CFLAGS) $(LIB_CFLAGS) $(VMLIB_LIB) vm.c -o libvmlib.dylib 


#LISTC_CFLAGS = -D LISTDEBUG
LISTC_LIB = -L./ -ldebuglib -lmemlib -llist
listc_driver: Listint_main.c libdebuglib.dylib libmemlib.dylib liblist.dylib
	$(CC) $(CFLAGS) $(LISTC_CFLAGS) $(LISTC_LIB) -o listc_driver Listint_main.c

#VM_CFLAGS = -fsyntax-only -D DEBUGON
#VM_CFLAGS = -E -D DEBUGON
VM_LIB = -L./ -ldebuglib -lmemlib -lvmlib
vm_driver: vm.c vm.h libdebuglib.dylib libmemlib.dylib libvmlib.dylib
	$(CC) $(CFLAGS) $(VM_CFLAGS) $(VM_LIB) -o vm_driver vm_main.c

#Listint.o: Listint.c
#	$(CC) $(CFLAGS) -c Listint.c


#debuglib.o: debuglib.c debuglib.h
#	$(CC) $(CFLAGS) -c debuglib.c 

		
debuglib:	

#transint.o: transint.c transint.h
#	$(CC) $(CFLAGS) -c transint.c
		
transint_driver:	
	
#commandint.o: commandint.c commandint.h
#	$(CC) $(CFLAGS) -c commandint.c

		
commandint_driver: 

lex.yy.c : interpreter.l interpreter.tab.c interpreter.l.h
	$(FLEX) $(FLOP) interpreter.l

lex_driver:


interpreter.tab.c : interpreter.y interpreter.y.h
	$(BISON) $(BISOP) interpreter.y
		
yacc_driver: 

MEMLIB_CFLAGS = -D DEBUGON
MEMLIB_LIB = -L./  -lmemlib
memlib: libmemlib.dylib memlib_main.c
	$(CC) $(CFLAGS) $(MEMLIB_CFLAGS) $(MEMLIB_LIB) -o memlib memlib_main.c 


#memlib.o: memlib.c memlib.h
#	$(CC) $(CFLAGS) -c memlib.c 

REGLIB_CFLAGS = -D DEBUGON
REGLIB_LIB = -L./  -lreglib -lmemlib
reglib: libreglib.dylib reglib_main.c libmemlib.dylib
	$(CC) $(CFLAGS) $(REGLIB_CFLAGS) $(REGLIB_LIB) -o reglib reglib_main.c 

#reglib: reglib.c reglib.h debuglib.o memlib.c memlib.h reglib_main.c Listint.o
#	$(CC) $(CFLAGS) -o reglib reglib.c reglib_main.c debuglib.o Listint.o memlib.c

#run:
#	exec "for FILE in `ls *.asm`; do ./interpreter $(FILE); done"
#	for FILE in `ls *.asm` ; do ./interpreter $(FILE); done

main.c : interpreter.tab.c main.h


#symtabint.o: symtabint.h symtabint.c
#	$(CC) -c symtabint.c $(CFLAGS)

MAIN = main.c

SRCS  = lex.yy.c \
	interpreter.tab.c \
	main.c \
	Listint.c  \
	commandint.c \
	transint.c \
	debuglib.c \
	memlib.c \
	reglib.c \
	vm.c

OBJS  = lex.yy.o  \
	interpreter.tab.o \
	Listint.o \
	commandint.o \
	transint.o \
	debuglib.c \
	memlib.c \
	reglib.c \
	vm.c
	
LIBRARYS = libreglib.dylib \
	libmemlib.dylib \
	libdebuglib.dylib \
	libcommand.dylib \
	liblist.dylib \
	libtrans.dylib \
	libinterpreter.dylib \
	libvmlib.dylib


sample$(NUM) : sample$(NUM).c
	$(MYUCC) sample$(NUM).c

clean : cleanmore
	rm *.o lex.yy.c lex.yy.h lex.yy.tables lex.backup interpreter.tab.* interpreter.output interpreter example core test *.out *.s; rm -rf *.dSYM *.dylib debug.output memlib reglib;

cleanmore:
	rm listc_driver vm_driver *.dylib; rm -rf  *.dylib.dSYM

drivers: listc_driver
		
interpreter : $(OBJS) $(MAIN)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $(TARGETDIR)/$@ $(IFLAGS) $(OBJS) $(MAIN) 
#MAIN_CFLAGS = -D MAINDEBUG
#interpreter : $(MAIN) $(LIBRARYS)
#	$(CC) $(CFLAGS) $(MAIN_CFLAGS) $(LDFLAGS) -o $(TARGETDIR)/$@ $(IFLAGS) $(LIBS) $(MAIN) 

example: $(OBJS) $(MAIN) symtab.o example.c List.o
	$(CC) $(CFLAGS) $(LDFLAGS) -o $(TARGETDIR)/$@ $(LIBS) $(OBJS) example.c


#	if (/bin/test -w $@) then (rm $@) else (:) fi
#
# make depend
#
# The depend switch varies (unfortunately) for different C compilers.
#        -Em is used by DEC,
#	 -M by Sun
#DEPEND = -Em
#DEPEND = -M
DEPEND = -MM
depend:
	sed -e "/^#=====DO NOT DELETE THIS LINE=====/q" Makefile.old > Makefile.new
	$(CC) $(CFLAGS) $(DEPEND) $(SRCS) >> Makefile.new
#	gcc $(CFLAGS) $(DEPEND) $(SRCS) >> Makefile.new
	mv Makefile.new Makefile.old

#=====DO NOT DELETE THIS LINE=====
lex.yy.o: lex.yy.c debuglib.h Listint.h exprint.h typeint.h dataint.h \
  symtabint.h interpreter.l.h interpreter.tab.h transint.h memlib.h
interpreter.tab.o: interpreter.tab.c debuglib.h Listint.h exprint.h \
  typeint.h dataint.h symtabint.h interpreter.l.h interpreter.tab.h \
  transint.h
main.o: main.c debuglib.h Listint.h exprint.h typeint.h dataint.h \
  symtabint.h interpreter.l.h interpreter.tab.h transint.h commandint.h \
  main.h memlib.h
Listint.o: Listint.c debuglib.h Listint.h exprint.h typeint.h memlib.h
commandint.o: commandint.c commandint.h memlib.h debuglib.h Listint.h \
  exprint.h typeint.h
transint.o: transint.c transint.h Listint.h exprint.h typeint.h memlib.h \
  debuglib.h
debuglib.o: debuglib.c debuglib.h Listint.h exprint.h typeint.h memlib.h
memlib.o: memlib.c memlib.h debuglib.h Listint.h exprint.h typeint.h
reglib.o: reglib.c reglib.h memlib.h debuglib.h Listint.h exprint.h \
  typeint.h
